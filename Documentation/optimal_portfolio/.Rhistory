x<-seq(0,0.3,0.05)
y<- 0.4603*x+0.08
lines(x,y)
Sharpe <- (E-0.08)/S
Sharpe
0.06/0.46
0.06/0.46
0.02/0.08
x <- O.25
x <- 0.25
y <- 1-x
E <- x*0.2+y*0.12
S < portstddev(x,y,0.3,0.15,0.1)
S < portstddev(x,y,0.3,0.15,0.1)
S <- portstddev(x,y,0.3,0.15,0.1)
points(S,E,pch=0.21,bg="red")
source('~/R/mes fonctions/All.R')
S
0.06/0.46
View(portstddev3)
E <- w1*0.2+w2*0.12
0.06/(0.156-0.08)
0.18/0.4
0.012+0.3*0.45
0.12+0.3*0.45
-15.21625*6.463+4.21625*13.14625
0.079/(0.232^2)
3.5*(0.232)^2
0.25*1.1+0.75*1.25
1.2125*0.08
a <- (14-11)/(1.5-1)
b <- 5
x <- (0,3,0.1)
x <- seq(0,3,0.1)
y <-a*x+b
plot(x,y,type="l")
points(1,12,pch=21, bg="red")
points(1,5,13,pch=21, bg="red")
points(1.5,13,pch=21, bg="red")
(5081-5112)/5112
a <- (-6-2.73)/1
b <- 2.73
y <- a*x+b
plot(x,y,type="l")
x <- seq(-3,3,0.1)
y <- a*x+b
plot(x,y,type="l")
rm(list=ls.str())
Em <- -0.06
Rf <- 0.0273
a <- -0.06-0.0273
b <- 0.0273
x <- seq(-3,3,0.1)
y <- a*x+b
plot(x,y,type="l")
source('~/R/mes fonctions/All.R')
source('~/R/mes fonctions/All.R')
testfun(1,2,3)
source('~/R/mes fonctions/All.R')
testfun(1,2,3)
source('~/R/mes fonctions/All.R')
testfun(1,2,3,4,5,6)
source('~/R/mes fonctions/All.R')
source('~/R/mes fonctions/All.R')
test <- getAllData("GOOG/ASX_ALU","GOOG/ASX_VRL")
source('~/R/mes fonctions/All.R')
test <- getAllData("GOOG/ASX_ALU","GOOG/ASX_VRL")
test <- getAllData("GOOG/ASX_ALU")
test
source('~/R/mes fonctions/All.R')
source('~/R/mes fonctions/All.R')
test <- getAllData("GOOG/ASX_ALU")
test
test <- getAllData("GOOG/ASX_ALU","GOOG/ASX_VRL")
test
test[[1]]
source('~/R/mes fonctions/All.R')
test <- getAllData("GOOG/ASX_ALU","GOOG/ASX_VRL")
source('~/R/mes fonctions/All.R')
myBeta <- getAllBeta(test)
test[[1]]
myBeta <- getAllBeta(test)
length(test)
nrow(test[[1]])
source('~/R/mes fonctions/All.R')
source('~/R/mes fonctions/All.R')
source('~/R/mes fonctions/All.R')
source('~/R/mes fonctions/All.R')
source('~/R/mes fonctions/All.R')
myBeta <- getAllBeta(test)
source('~/R/mes fonctions/All.R')
myBeta <- getAllBeta(test)
Quandl("YAHOO/ASX_AXJO")
Quandl("YAHOO/INDEX_AXJO")
mydata <- Quandl("YAHOO/INDEX_AXJO")
mydata[1,5]
mydata[0,5]
mydata[1,1]
mydata[1,2]
mydata[1,3]
mydata[1,4]
mydata[1,5]
mydata[1,6]
mydata[1,7]
mydata[0:1]
mydata[,0:1]
mydata[0:1,0:1]
mydata[0:1,0:3]
mydata[0:1,0:6]
nrow(Quandl("GOOG/ASX_VRL"))
source('~/R/mes fonctions/All.R')
mydata <- getAllData("YAHOO/INDEX_AXJO","GOOG/ASX_VRL","GOOG/ASX_ALU")
source('~/R/mes fonctions/All.R')
mydata <- getAllData("YAHOO/INDEX_AXJO","GOOG/ASX_VRL","GOOG/ASX_ALU")
source('~/R/mes fonctions/All.R')
mydata <- getAllData("YAHOO/INDEX_AXJO","GOOG/ASX_VRL","GOOG/ASX_ALU")
source('~/R/mes fonctions/All.R')
mydata <- getAllData("YAHOO/INDEX_AXJO","GOOG/ASX_VRL","GOOG/ASX_ALU")
mydata[[2]]
mydata[[2]][0:nrow(mydata[[2]])-1,0:3]
mydata[[2]][0:(nrow(mydata[[2]])-1),0:3]
source('~/R/mes fonctions/All.R')
mydata <- getAllData("YAHOO/INDEX_AXJO","GOOG/ASX_VRL","GOOG/ASX_ALU")
mydata[[1]]
mydata[[3]]
myBeta <- getAllBeta(mydata)
myBeta
cov <- covariance(mydata[[1]],mydata[[2]])
cov
std <- standdev(mydata[[1]])
cov/std
cov/(std^2)
std
getReturn(mydata[[1]])
getClose(mydata[[1]])
getReturn(getClose(mydata[[1]]))
cov
myBeta
mydata <- getAllData("YAHOO/INDEX_AXJO","GOOG/ASX_VRL","GOOG/ASX_ALU","GOOG/ASX_QAN","GOOG/ASX_CWN","GOOG/ASX_NHC","GOOG/ASX_WHC")
myBeta <- getAllBeta(mydata)
mydata <- getAllData("YAHOO/INDEX_AXJO","GOOG/ASX_VRL","GOOG/ASX_ALU","GOOG/ASX_CWN","GOOG/ASX_WHC")
myBeta <- getAllBeta(mydata)
myBeta
cov <- covariance(mydata[[1]],mydata[[2]])
cov
mean(getReturn(getClose(mydata[[1]])))
source('~/R/mes fonctions/All.R')
myReturns <- getFairReturn(myBeta,b,a)
points(myBeta,myReturns,pch=21,bg="red")
source('~/R/mes fonctions/All.R')
length(mydata[[2]])
source('~/R/mes fonctions/All.R')
source('~/R/mes fonctions/All.R')
mydata <- getAllData("YAHOO/INDEX_AXJO","GOOG/ASX_VRL","GOOG/ASX_ALU","GOOG/ASX_CWN","GOOG/ASX_WHC","GOOG/ASX_QAN","GOOG/ASX_NHC","GOOG/ASX_TTS","GOOG/ASX_TPN","GOOG/ASX_TNE")
mydata <- getAllData("YAHOO/INDEX_AXJO","GOOG/ASX_VRL","GOOG/ASX_ALU","GOOG/ASX_CWN","GOOG/ASX_WHC","GOOG/ASX_QAN","GOOG/ASX_NHC","GOOG/ASX_TTS","GOOG/ASX_TPM","GOOG/ASX_TNE")
myBeta <- getAllBeta(mydata)
myReturns <- getFairReturn(myBeta, Rf, a)
points(myBeta,myReturns,pch=21,bg="green")
mydata <- getAllData("YAHOO/INDEX_AXJO","GOOG/ASX_AAC","GOOG/ASX_AAD","GOOG/ASX_ABC","GOOG/ASX_ABP","GOOG/ASX_AGI","GOOG/ASX_AGL","GOOG/ASX_AHG","GOOG/ASX_AHY","GOOG/ASX_AIO","GOOG/ASX_ALL","GOOG/ASX_ALQ","GOOG/ASX_AMC","GOOG/ASX_AMP","GOOG/ASX_ANN","GOOG/ASX_ANZ","GOOG/ASX_AOG","GOOG/ASX_APA","GOOG/ASX_APN","GOOG/ASX_ARB","GOOG/ASX_ARI","GOOG/ASX_AST","GOOG/ASX_ASX","GOOG/ASX_AWC","GOOG/ASX_AWE","GOOG/ASX_AZJ")
mydata <- getAllData("YAHOO/INDEX_AXJO","GOOG/ASX_AAC","GOOG/ASX_AAD","GOOG/ASX_ABC","GOOG/ASX_ABP","GOOG/ASX_AGI","GOOG/ASX_AGL","GOOG/ASX_AHG","GOOG/ASX_AHY","GOOG/ASX_AIO","GOOG/ASX_ALL","GOOG/ASX_ALQ","GOOG/ASX_AMC","GOOG/ASX_AMP","GOOG/ASX_ANN","GOOG/ASX_ANZ","GOOG/ASX_AOG","GOOG/ASX_APA","GOOG/ASX_ARB","GOOG/ASX_AST","GOOG/ASX_ASX","GOOG/ASX_AWC","GOOG/ASX_AWE","GOOG/ASX_AZJ")
mydata <- getAllData("YAHOO/INDEX_AXJO","GOOG/ASX_AAC","GOOG/ASX_AAD","GOOG/ASX_ABC","GOOG/ASX_ABP","GOOG/ASX_AGI","GOOG/ASX_AGL","GOOG/ASX_AHG","GOOG/ASX_AHY")
mydata <- getAllData("YAHOO/INDEX_AXJO","GOOG/ASX_AAC","GOOG/ASX_AAD")
mydata <- getAllData("YAHOO/INDEX_AXJO","GOOG/ASX_AAC","GOOG/ASX_AAD","GOOG/ASX_ABC","GOOG/ASX_ABP")
mydata <- getAllData("YAHOO/INDEX_AXJO","GOOG/ASX_AAC","GOOG/ASX_AAD","GOOG/ASX_ABC")
mydata <- getAllData("YAHOO/INDEX_AXJO","GOOG/ASX_AAC","GOOG/ASX_AAD","GOOG/ASX_ABC","GOOG/ASX_AGI","GOOG/ASX_AGL","GOOG/ASX_AHG","GOOG/ASX_AHY","GOOG/ASX_AIO","GOOG/ASX_ALL","GOOG/ASX_ALQ","GOOG/ASX_AMC","GOOG/ASX_AMP","GOOG/ASX_ANN","GOOG/ASX_ANZ","GOOG/ASX_AOG","GOOG/ASX_APA","GOOG/ASX_APN","GOOG/ASX_ARB","GOOG/ASX_ARI","GOOG/ASX_AST","GOOG/ASX_ASX","GOOG/ASX_AWC","GOOG/ASX_AWE","GOOG/ASX_AZJ")
mydata <- getAllData("YAHOO/INDEX_AXJO","GOOG/ASX_AAC","GOOG/ASX_AAD","GOOG/ASX_ABC","GOOG/ASX_AGI","GOOG/ASX_AGL","GOOG/ASX_AHY","GOOG/ASX_AIO","GOOG/ASX_ALL","GOOG/ASX_ALQ","GOOG/ASX_AMC","GOOG/ASX_AMP","GOOG/ASX_ANN","GOOG/ASX_ANZ","GOOG/ASX_AOG","GOOG/ASX_APA","GOOG/ASX_APN","GOOG/ASX_ARI","GOOG/ASX_AST","GOOG/ASX_ASX","GOOG/ASX_AWC","GOOG/ASX_AWE","GOOG/ASX_AZJ")
myBeta <- getAllBeta(mydata)
myBeta
mydata[[5]]
covariance(mydata[[1]],mydata[[5]])/(standdev(mydata[[1]])^2)
mydata[[1]][0:nrow(mydata[[5]]),0:length(mydata[[5]])]
length(getClose(getReturn(mydata[[1]][0:nrow(mydata[[5]]),0:length(mydata[[5]])])))
length(getReturn(getClose(mydata[[1]][0:nrow(mydata[[5]]),0:length(mydata[[5]])])))
length(getReturn(getClose(mydata[[5]])))
source('~/R/mes fonctions/All.R')
getAllBeta(mydata)
source('~/R/mes fonctions/All.R')
source('~/R/mes fonctions/All.R')
getAllBeta(mydata)
source('~/R/mes fonctions/All.R')
getAllBeta(mydata)
source('~/R/mes fonctions/All.R')
source('~/R/mes fonctions/All.R')
getAllBeta(mydata)
source('~/R/mes fonctions/All.R')
getAllBeta(mydata)
source('~/R/mes fonctions/All.R')
source('~/R/mes fonctions/All.R')
getAllBeta(mydata)
source('~/R/mes fonctions/All.R')
getAllBeta(mydata)
source('~/R/mes fonctions/All.R')
getAllBeta(mydata)
myBeta <- getAllBeta(mydata)
myRes <- getFairReturn((myBeta))
myRes <- getFairReturn(myBeta,Rf, a)
points(myBeta,myRes,pch=18,bg="marine")
points(myBeta,myRes,pch=18,bg="blue")
t <- seq(-180,180,1)
r <-(1+0.9*cos(8*t))*(1+0.1*cos(24*t))*(0.9+0.1*cos(200*t))*(1+sin(t))
plot(t,r,type="l")
library(shiny)
runApp(R/simple_exercise)
runApp("R/simple_exercise")
runApp("R/simple_exercise")
pwd
wd
pwd()
getwd()
install.packages("Ryacas")
getwd()
library(shiny)
runApp("R/optimal_portfolio")
runApp("R/optimal_portfolio")
library(Quandl)
library(rportfolios)
source('~/R/optimal_portfolio/Optimal_Portfolio.R')
runApp("R/optimal_portfolio")
source('~/R/optimal_portfolio/Optimal_Portfolio.R')
runApp("R/optimal_portfolio")
source('~/R/optimal_portfolio/Optimal_Portfolio.R')
runApp("R/optimal_portfolio")
Quandl("YAHOO/ASX_AAC_AX",collapse = "monthly", start_date="2005-01-01")
source('~/R/optimal_portfolio/Optimal_Portfolio.R')
runApp("R/optimal_portfolio")
Quandl("YAHOO/ASX_AAC_AX",collapse = "monthly", start_date="2010-01-01")
runApp("R/optimal_portfolio")
test <- matrix(c(1,2,3,4),nrow = 2,ncol=2)
test
test[1][1]
runApp("R/optimal_portfolio")
ess <- rep(1,3)
0.1*ess
nrow(test)
source('~/R/optimal_portfolio/Optimal_Portfolio.R')
runApp("R/optimal_portfolio")
runApp("R/optimal_portfolio")
source('~/R/optimal_portfolio/Optimal_Portfolio.R')
runApp("R/optimal_portfolio")
a <- (1,2,3)
a <- c(1,2,3)
b <- c(4,5,6)
x <- seq(-1,1,0.1)
z <- x*a+(1-x)*b
z
z[1]
a
z <- x*t()a+(1-x)*t(b)
z <- x*t(a)+(1-x)*t(b)
source('~/R/optimal_portfolio/Optimal_Portfolio.R')
source('~/R/optimal_portfolio/Optimal_Portfolio.R')
source('~/R/optimal_portfolio/Optimal_Portfolio.R')
runApp("R/optimal_portfolio")
source('~/R/optimal_portfolio/Optimal_Portfolio.R')
runApp("R/optimal_portfolio")
source('~/R/optimal_portfolio/Optimal_Portfolio.R')
source('~/R/optimal_portfolio/Optimal_Portfolio.R')
source('~/R/optimal_portfolio/Optimal_Portfolio.R')
runApp("R/optimal_portfolio")
0.5*c(1,2,3)+0.5*c(4,5,6)
source('~/R/optimal_portfolio/Optimal_Portfolio.R')
source('~/R/optimal_portfolio/Optimal_Portfolio.R')
runApp("R/optimal_portfolio")
a <- seq(-1,1,0.01)
z <- a*c(1,2,3)+(1-a)*c(2,3,4)
Z
z
z[1]
z <- c(a*c(1,2,3)+(1-a)*c(2,3,4))
z
z[1]
z <- list(a*c(1,2,3)+(1-a)*c(2,3,4))
z
source('~/R/optimal_portfolio/Optimal_Portfolio.R')
runApp("R/optimal_portfolio")
for (a in seq(-1,1,0.01)){
a
}
z <- c()
z <- append(z,c(1,2))
z
z[1]
a <- seq(1,2,1)
z <- a*c(1,2)+(1-a)*(2,3)
z <- a*c(1,2)+(1-a)*c(2,3)
z
z[1]
z <- 2*c(1,2)+c(2,3)
z
source('~/R/optimal_portfolio/Optimal_Portfolio.R')
test <- c()
for (i in seq(-1,1,0.1)){
x <- i*c(1,2)+(1-i)*c(2,3)
test <- append(test,x)
}
test
test[1]
test <- list()
for (i in seq(-1,1,0.1)){
x <- i*c(1,2)+(1-i)*c(2,3)
test <- append(test,x)
}
test
test <- list()
for (i in seq(-1,1,0.1)){
x <- i*c(1,2)+(1-i)*c(2,3)
x
}
test <- list()
for (i in seq(-1,1,0.1)){
x <- i*c(1,2)+(1-i)*c(2,3)
print(x)
}
test <- list()
for (i in seq(-1,1,0.1)){
x <- i*c(1,2)+(1-i)*c(2,3)
test <- append(test,x)
}
test[[1]]
test
ess <- list(c(1,2),c(1,3))
ess
test <- list()
for (i in seq(-1,1,0.1)){
x <- i*c(1,2)+(1-i)*c(2,3)
print(x)
test <- append(test,x)
}
c(1,2)
test <- list()
for (i in seq(-1,1,0.1)){
x <- i*c(1,2)+(1-i)*c(2,3)
print(x)
test <- append(test,c(x))
}
test
test <- list()
for (i in seq(-1,1,0.1)){
x <- i*c(1,2)+(1-i)*c(2,3)
print(x)
test <- append(test[[i]],c(x))
}
source('~/R/optimal_portfolio/Optimal_Portfolio.R')
a <- seq(-1,1,0.1)
for (i in a){
z <- a*c(1,2)+(1-a)*c(2,3)
}
warnings()
a <- seq(-1,1,0.1)
z <- c()
for (i in a){
z <- a*c(1,2)+(1-a)*c(2,3)
}
a <- seq(-1,1,0.1)
z <- c()
for (i in a){
z <- i*c(1,2)+(1-i)*c(2,3)
}
a <- seq(-1,1,0.1)
z <- c()
for (i in a){
z <- i*c(1,2)+(1-i)*c(2,3)
}
a <- seq(-1,1,0.1)
z <- c()
for (i in a){
z <- i*c(1,2)+(1-i)*c(2,3)
print(z)
}
a <- seq(-1,1,0.1)
z <- c()
res <- list()
for (i in a){
z <- i*c(1,2)+(1-i)*c(2,3)
print(z)
res <- append(res,z)
print(res)
}
a <- seq(-1,1,0.1)
z <- c()
res <- list()
for (i in a){
z <- i*c(1,2)+(1-i)*c(2,3)
res <- append(res,z)
print(res)
}
a <- seq(-1,1,0.1)
z <- c()
res <- list()
for (i in a){
z <- i*c(1,2)+(1-i)*c(2,3)
res <- append(res,z)
print(res)
}
a <- seq(-1,1,0.1)
z <- z <- i*c(1,2)+(1-i)*c(2,3)
print(z)
a <- seq(-1,1,0.1)
z <- z <- a*c(1,2)+(1-a)*c(2,3)
print(z)
a <- seq(-1,1,0.1)
z <- a*c(1,2)+(1-a)*c(2,3)
print(z)
a <- seq(-1,1,0.1)
z <- c()
res <- list()
for (i in a){
z <- i*c(1,2)+(1-i)*c(2,3)
res <- append(res,z)
print(z)
}
source('~/R/optimal_portfolio/Optimal_Portfolio.R')
library(shiny)
runApp("R/optimal_portfolio")
source('~/R/optimal_portfolio/Optimal_Portfolio.R')
runApp("R/optimal_portfolio")
runApp("R/optimal_portfolio")
source('~/R/optimal_portfolio/Optimal_Portfolio.R')
source('~/R/optimal_portfolio/Optimal_Portfolio.R')
source('~/R/optimal_portfolio/Optimal_Portfolio.R')
source('~/R/optimal_portfolio/Optimal_Portfolio.R')
library(shiny)
runApp("R/optimal_portfolio")
match(NA,list(1,2,3))
match(NA,list(1,2,NA))
match(NA,NA)
match(NA,list(NA,NA,NA))
match(NA,c(NA,NA,NA))
runApp("R/optimal_portfolio")
getwd()
library(shiny)
runApp("optimal_portfolio")
a <- seq(0,1,0.01)
b <- 1-a
Ep <- a*0.12+b*0.2
Rp <- portstddev(a,b,0.04,0.1,0.16)
plot(Rp,Ep,xlab="Risk",ylab="Expected Return",main="Efficient Frontier")
plot(Rp,Ep,xlab="Risk",ylab="Expected Return",main="Efficient Frontier",type="l")
x <- 0.739
y 1-0.739
y <- 1-x
Rp <- portstddev(x,y,0.04,0.1,0.16)
Ep <- x*0.12+y*0.2
points(Rp,Ep,pch=21,col="red")
points(Rp,Ep,pch=21,col="red",bg="red")
(Ep-0.05)/Rp
g <- seq(0,1,0.01)
Er <- (Ep-0.05)/Rp+0.05
line(g,Er,col="green")
lines(g,Er,col="green")
Er <- ((Ep-0.05)/Rp)*g+0.05
lines(g,Er,col="green")
plot(Rp,Ep,xlab="Risk",ylab="Expected Return",main="Efficient Frontier",type="l",xaxs="i",yaxs="i")
Ep <- a*0.12+b*0.2
Rp <- portstddev(a,b,0.04,0.1,0.16)
plot(Rp,Ep,xlab="Risk",ylab="Expected Return",main="Efficient Frontier",type="l",xaxs="i",yaxs="i")
points(Rp,Ep,pch=21,col="red",bg="red")
E <- x*0.12+y*0.2
R <- portstddev(x,y,0.04,0.1,0.16)
plot(Rp,Ep,xlab="Risk",ylab="Expected Return",main="Efficient Frontier",type="l",xaxs="i",yaxs="i")
points(R,E,pch=21,col="red",bg="red")
points(0,0.05,pch=21,col="green",bg="green")
plot(Rp,Ep,xlim=c(0:0.10),ylim=c(0.05,0.20),xlab="Risk",ylab="Expected Return",main="Efficient Frontier",type="l",xaxs="i",yaxs="i")
plot(Rp,Ep,xlim=c(0:0.10),ylim=c(0.05:0.20),xlab="Risk",ylab="Expected Return",main="Efficient Frontier",type="l",xaxs="i",yaxs="i")
plot(Rp,Ep,xlim=c(0,0.10),ylim=c(0.05,0.20),xlab="Risk",ylab="Expected Return",main="Efficient Frontier",type="l",xaxs="i",yaxs="i")
points(0,0.05,pch=21,col="green",bg="green")
points(R,E,pch=21,col="red",bg="red")
lines(g,Er,col=" dark green")
lines(g,Er,col=" dark blue")
points(R,E,pch=21,col="red",bg="red", cex=1.5)
points(R,E,pch=21,col="red",bg="red", cex=1.2)
points(0,0.05,pch=21,col="green",bg="green",cex=1.2)
plot(Rp,Ep,xlim=c(0,0.10),ylim=c(0.05,0.20),xlab="Risk",ylab="Expected Return",main="Efficient Frontier",type="l",xaxs="i",yaxs="i")
points(0,0.05,pch=21,col="green",bg="green",cex=1.2)
points(R,E,pch=21,col="red",bg="red", cex=1.2)
points(R,E,pch=21,col="red",bg="red", cex=1.4)
points(0,0.05,pch=21,col="green",bg="green",cex=1.4)
plot(Rp,Ep,xlim=c(-0.001,0.10),ylim=c(0.04,0.20),xlab="Risk",ylab="Expected Return",main="Efficient Frontier",type="l",xaxs="i",yaxs="i")
plot(Rp,Ep,xlim=c(0,0.10),ylim=c(0.05,0.20),xlab="Risk",ylab="Expected Return",main="Efficient Frontier",type="l",xaxs="i",yaxs="i")
par(xpd=NA)
plot(Rp,Ep,xlim=c(0,0.10),ylim=c(0.05,0.20),xlab="Risk",ylab="Expected Return",main="Efficient Frontier",type="l",xaxs="i",yaxs="i")
points(0,0.05,pch=21,col="green",bg="green",cex=1.4)
points(R,E,pch=21,col="red",bg="red", cex=1.4)
lines(g,Er,col="blue")
par(xpd=FALSE)
plot(Rp,Ep,xlim=c(0,0.10),ylim=c(0.05,0.20),xlab="Risk",ylab="Expected Return",main="Efficient Frontier",type="l",xaxs="i",yaxs="i")
points(0,0.05,pch=21,col="green",bg="green",cex=1.4,xpd=NA)
points(R,E,pch=21,col="red",bg="red", cex=1.4)
lines(g,Er,col="blue")
E1 <- 0.1
R1 <- 0.08
E2 <- 0.21
R2 <- 0.19
Rf <- 0.08
w1 <- ((E1-Rf)*R2^2-(E2-Rf)*(-0.1)*R1*R2)/((E1-Rf)*R2^2+(E2-Rf)*R1^2-(E1+E2-2*Rf)*(-0.1)*R1*R2)
w2 <- 1-w1
w1
E <- a*E1 + b*E2
S <- portstddev(a,b,R1,R2,-0.1)
plot(S,E,type="l")
points(0,0.08,pch=21,bg="green")
plot(S,E,xlim=c(0,0.19),ylim=c(0.07,0.19),type="l")
points(0,0.08,pch=21,bg="green")
Eo <- w1*E1+w2*E2
So <- portstddev(w1,w2,R1,R2,-0.1)
points(So,Eo,pch=21,bg="red")
Eo
Rf
portstddev(0.8,0.2,R1,R2,-0.1)
source('~/R/optimal_portfolio/Optimal_Portfolio.R')
library(shiny)
runApp("R/optimal_portfolio")
